Subject: [PATCH] Tennis changes.
---
Index: src/main/java/com/github/shynixn/blockball/entity/DoubleJumpMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/DoubleJumpMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/DoubleJumpMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/DoubleJumpMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/DoubleJumpMeta.kt	(date 1751552105663)
@@ -7,11 +7,11 @@
     @Comment("Are double jumps enabled or disabled?")
     var enabled: Boolean = true
     @Comment("Cooldown in seconds between double jumps.")
-    var cooldown: Int = 2
+    var cooldown: Int = 1
     @Comment("The vertical velocity modifier.")
-    var verticalStrength: Double = 1.0
+    var verticalStrength: Double = 0.4
     @Comment("The horizontal velocity modifier.")
-    var horizontalStrength: Double = 2.0
+    var horizontalStrength: Double = 1.2
    @Comment("The sound effect being played. The names are separated by comma to support different Minecraft versions. An empty name disables the sound.")
     val soundEffect: SoundMeta = SoundMeta().also {
         it.name = "ENTITY_WIND_CHARGE_WIND_BURST,ENTITY_GHAST_SHOOT,GHAST_FIREBALL"
Index: src/main/java/com/github/shynixn/blockball/entity/LobbyMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/LobbyMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/LobbyMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/LobbyMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/LobbyMeta.kt	(date 1751552105670)
@@ -6,8 +6,8 @@
 import org.bukkit.GameMode
 
 class LobbyMeta {
-    @Comment("The max amount of goals a team can score before the match ends and the game is reset.")
-    var maxScore: Int = 10
+    @Comment("The max amount of sets a team can score before the match ends and the game is reset.")
+    var maxScore: Int = 3
 
     @Comment("If set to true, the team choice when joining may get ignored if the other team has not got enough players.")
     var onlyAllowEventTeams: Boolean = false
Index: src/main/java/com/github/shynixn/blockball/entity/MinigameLobbyMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/MinigameLobbyMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/MinigameLobbyMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/MinigameLobbyMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/MinigameLobbyMeta.kt	(date 1751552105678)
@@ -26,18 +26,6 @@
         firstPeriod.duration = 150
         firstPeriod.respawnEnabled = true
 
-        val breakPeriod = MatchTimeMeta()
-        breakPeriod.duration = 10
-        breakPeriod.playAbleBall = false
-        breakPeriod.respawnEnabled = false
-        breakPeriod.startMessageTitle = ""
-        breakPeriod.startMessageSubTitle = "&0&l[&f&lBreak&0&l]&7"
-
-        val secondPeriod = MatchTimeMeta()
-        secondPeriod.duration = 150
-        secondPeriod.respawnEnabled = true
-        secondPeriod.switchGoals = true
-
         val coolDownPeriod = MatchTimeMeta()
         coolDownPeriod.duration = 10
         coolDownPeriod.playAbleBall = false
@@ -45,8 +33,6 @@
 
         matchTimes = arrayListOf(
             firstPeriod,
-            breakPeriod,
-            secondPeriod,
             coolDownPeriod
         )
     }
Index: src/main/resources/lang/en_us.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/lang/en_us.yml b/src/main/resources/lang/en_us.yml
--- a/src/main/resources/lang/en_us.yml	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/resources/lang/en_us.yml	(date 1751552105942)
@@ -107,14 +107,14 @@
   text: "&0&l[&f&lBlockBall&0&l]&7 The BlockBall axe has been added to your inventory."
 scoreRed:
   type: "TITLE"
-  text: "&c%blockball_game_redScore% : &9%blockball_game_blueScore%"
+  text: "&c%blockball_game_tennisScore%"
   subTitle: "%1$1s scored for %blockball_game_redDisplayName%."
   fadeInTicks: 20
   stayTicks: 60
   fadeOutTicks: 20
 scoreBlue:
   type: "TITLE"
-  text: "&9%blockball_game_blueScore% : &c%blockball_game_redScore%"
+  text: "&9%blockball_game_tennisScore%"
   subTitle: "%1$1s scored for %blockball_game_blueDisplayName%."
   fadeInTicks: 20
   stayTicks: 60
@@ -451,3 +451,9 @@
 shyBossBarBooleanNotFoundMessage:
   type: "CHAT"
   text: "&0&l[&f&lBlockBall&0&l]&7&c Only true and false are allowed as values."
+bounceOutHologram:
+  type: "CHAT"
+  text: "&lOut"
+bounceSecondHologram:
+  type: "CHAT"
+  text: "&l2nd Bounce"
Index: src/main/resources/bossbar/blockball_bossbar.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/bossbar/blockball_bossbar.yml b/src/main/resources/bossbar/blockball_bossbar.yml
--- a/src/main/resources/bossbar/blockball_bossbar.yml	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/resources/bossbar/blockball_bossbar.yml	(date 1751552105930)
@@ -10,7 +10,7 @@
 # The Minecraft ticks how often this bossbar is updated to the player. (1 tick = 50ms)
 refreshTicks: 60
 # Displayed Message. Supports placeholders.
-message: "%blockball_game_redDisplayName% %blockball_game_redScore% : &9%blockball_game_blueScore% %blockball_game_blueDisplayName%"
+message: "%blockball_game_redDisplayName% %blockball_game_redSetScore% : &9%blockball_game_blueSetScore% %blockball_game_blueDisplayName%"
 # Color of the bossBar. Supports placeholders. Possibles values: PINK,BLUE,RED,GREEN,YELLOW,PURPLE,WHITE.
 color: "WHITE"
 # Progress of the BossBar in the range 0.0 to 1.0. Supports placeholders and should be a text value.
Index: src/main/resources/scoreboard/blockball_scoreboard.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/scoreboard/blockball_scoreboard.yml b/src/main/resources/scoreboard/blockball_scoreboard.yml
--- a/src/main/resources/scoreboard/blockball_scoreboard.yml	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/resources/scoreboard/blockball_scoreboard.yml	(date 1751552105953)
@@ -19,9 +19,7 @@
   - "&6You:"
   - "%blockball_player_teamDisplayName%"
   - "&m           &r"
-  - "%blockball_game_redDisplayName%:"
-  - "%blockball_game_redScore%"
-  - ""
-  - "%blockball_game_blueDisplayName%:"
-  - "%blockball_game_blueScore%"
+  - "%blockball_game_redDisplayName%"
+  - "> %blockball_game_tennisScore%"
+  - "%blockball_game_blueDisplayName%"
   - "&m           &r"
Index: src/main/java/com/github/shynixn/blockball/BlockBallDependencyInjectionModule.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/BlockBallDependencyInjectionModule.kt b/src/main/java/com/github/shynixn/blockball/BlockBallDependencyInjectionModule.kt
--- a/src/main/java/com/github/shynixn/blockball/BlockBallDependencyInjectionModule.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/BlockBallDependencyInjectionModule.kt	(date 1751552105902)
@@ -180,7 +180,7 @@
         module.addService<BallListener> { BallListener(module.getService(), module.getService()) }
         module.addService<DoubleJumpListener> { DoubleJumpListener(module.getService(), module.getService()) }
         module.addService<GameListener> {
-            GameListener(module.getService(), module.getService(), module.getService(), module.getService())
+            GameListener(module.getService(), module.getService(), module.getService(), module.getService(), module.getService(), module.getService())
         }
         module.addService<HubgameListener> { HubgameListener(module.getService()) }
         module.addService<MinigameListener> { MinigameListener(module.getService(), module.getService()) }
Index: src/main/java/com/github/shynixn/blockball/BlockBallLanguageImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/BlockBallLanguageImpl.kt b/src/main/java/com/github/shynixn/blockball/BlockBallLanguageImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/BlockBallLanguageImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/BlockBallLanguageImpl.kt	(date 1751552415287)
@@ -68,9 +68,9 @@
 
  override var axeReceivedMessage = LanguageItem("&0&l[&f&lBlockBall&0&l]&7 The BlockBall axe has been added to your inventory.")
 
- override var scoreRed = LanguageItem("&c%blockball_game_redScore% : &9%blockball_game_blueScore%")
+ override var scoreRed = LanguageItem("&c%blockball_game_tennisScore%")
 
- override var scoreBlue = LanguageItem("&9%blockball_game_blueScore% : &c%blockball_game_redScore%")
+ override var scoreBlue = LanguageItem("&9%blockball_game_tennisScore%")
 
  override var winRed = LanguageItem("%blockball_game_redDisplayName%")
 
@@ -269,4 +269,8 @@
  override var shyBossBarUpdatedMessage = LanguageItem("&0&l[&f&lBlockBall&0&l]&7 Updated the bossbar.")
 
  override var shyBossBarBooleanNotFoundMessage = LanguageItem("&0&l[&f&lBlockBall&0&l]&7&c Only true and false are allowed as values.")
+
+ override var bounceOutHologram = LanguageItem("&lOut")
+
+ override var bounceSecondHologram = LanguageItem("&l2nd Bounce")
 }
Index: src/main/java/com/github/shynixn/blockball/BlockBallPlugin.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/BlockBallPlugin.kt b/src/main/java/com/github/shynixn/blockball/BlockBallPlugin.kt
--- a/src/main/java/com/github/shynixn/blockball/BlockBallPlugin.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/BlockBallPlugin.kt	(date 1751552105923)
@@ -60,6 +60,28 @@
         var indexKey = "[index]"
         var gameKey = "[game]"
         val patreonOnly = "PatreonOnly"
+
+        fun getScore(points: Int): String {
+            return when (points) {
+                0 -> {
+                    "00"
+                }
+
+                1 -> {
+                    "15"
+                }
+
+                2 -> {
+                    "30"
+                }
+
+                3 -> {
+                    "40"
+                }
+
+                else -> throw RuntimeException("Score $points cannot be converted!")
+            }
+        }
     }
 
     /**
Index: src/main/java/com/github/shynixn/blockball/entity/ArenaMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/ArenaMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/ArenaMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/ArenaMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/ArenaMeta.kt	(date 1751552105646)
@@ -1,5 +1,8 @@
 package com.github.shynixn.blockball.entity
 
+import com.github.shynixn.mcutils.common.item.Item
+import com.github.shynixn.mcutils.common.serializeItem
+import com.github.shynixn.mcutils.packet.impl.service.ItemServiceImpl
 import com.github.shynixn.mcutils.sign.SignMeta
 
 class ArenaMeta {
@@ -34,6 +37,25 @@
         blueTeamMeta.displayName = "&9Team Blue"
         redTeamMeta.displayName = "&cTeam Red"
         refereeTeamMeta.displayName = "&fTeam Referee"
+        val hockey = arrayOfNulls<Item?>(36)
+        for (i in 0 until 3) {
+            hockey[i] = Item("minecraft:wooden_shovel,256").also {
+                it.displayName = "&6Short Range"
+            }
+        }
+        for (i in 3 until 6) {
+            hockey[i] = Item("minecraft:iron_shovel,256").also {
+                it.displayName = "&fMid Range"
+            }
+        }
+        for (i in 6 until 9) {
+            hockey[i] = Item("minecraft:diamond_shovel,256").also {
+                it.displayName = "&bLong Range"
+            }
+        }
+        val itemService = ItemServiceImpl()
+        redTeamMeta.inventory = hockey.map { e -> itemService.serializeItem(e) }.toTypedArray()
+        blueTeamMeta.inventory = hockey.map { e -> itemService.serializeItem(e) }.toTypedArray()
     }
 
     /**
Index: src/main/java/com/github/shynixn/blockball/entity/CustomizationMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/CustomizationMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/CustomizationMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/CustomizationMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/CustomizationMeta.kt	(date 1751552105655)
@@ -8,10 +8,10 @@
     var damageEnabled: Boolean = false
 
     @Comment("Should players be teleported back to their spawnpoint in the game when someone scores a goal?")
-    var backTeleport: Boolean = false
+    var backTeleport: Boolean = true
 
     @Comment("The amount of seconds until the players are teleported back to their spawnpoint when someone scores a goal.")
-    var backTeleportDelay: Int = 2
+    var backTeleportDelay: Int = 3
 
     @Comment("Should players keep their inventory when they join a game?")
     var keepInventoryEnabled: Boolean = false
@@ -19,15 +19,12 @@
     @Comment("Should players keep their current health when they join a game?")
     var keepHealthEnabled: Boolean = true
 
-    @Comment("If set to true, the goal size is allowed to by very tiny. If set to false, the goal size has to be a minimum size.")
-    var ignoreGoalSize: Boolean = false
-
     @Comment("When players queue for a game in gameType=MINIGAME, this is the timeout in seconds how long they can wait.")
     var queueTimeOutSec: Int = 30
 
     @Comment("The ball spawn delay in ticks when the game initially starts or when a new period is entered.")
-    var gameStartBallSpawnDelayTicks: Int = 2
+    var gameStartBallSpawnDelayTicks: Int = 40
 
     @Comment("The ball spawn delay in ticks when spawning after a goal has been scored.")
-    var goalScoredBallSpawnDelayTicks: Int = 1
+    var goalScoredBallSpawnDelayTicks: Int = 80
 }
Index: src/main/java/com/github/shynixn/blockball/impl/commandexecutor/BlockBallCommandExecutor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/commandexecutor/BlockBallCommandExecutor.kt b/src/main/java/com/github/shynixn/blockball/impl/commandexecutor/BlockBallCommandExecutor.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/commandexecutor/BlockBallCommandExecutor.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/commandexecutor/BlockBallCommandExecutor.kt	(date 1751552105784)
@@ -263,7 +263,7 @@
     }
 
     init {
-        val mcCart = CommandBuilder(plugin, coroutineExecutor, "blockball", chatMessageService) {
+        val mcCart = CommandBuilder(plugin, coroutineExecutor, "mctennis", chatMessageService) {
             usage(language.commandUsage.text.translateChatColors())
             description(language.commandDescription.text)
             aliases(plugin.config.getStringList("commands.blockball.aliases"))
@@ -904,9 +904,7 @@
     }
 
     private suspend fun setLocation(player: Player, arena: SoccerArena, locationType: LocationType) {
-        if (locationType == LocationType.BALL) {
-            arena.ballSpawnPoint = player.location.toVector3d()
-        } else if (locationType == LocationType.LEAVE_SPAWNPOINT) {
+        if (locationType == LocationType.LEAVE_SPAWNPOINT) {
             arena.meta.lobbyMeta.leaveSpawnpoint = player.location.toVector3d()
         } else if (locationType == LocationType.BLUE_SPAWNPOINT) {
             arena.meta.blueTeamMeta.spawnpoint = player.location.toVector3d()
@@ -920,6 +918,10 @@
             arena.meta.blueTeamMeta.lobbySpawnpoint = player.location.toVector3d()
         } else if (locationType == LocationType.REFEREE_LOBBY) {
             arena.meta.refereeTeamMeta.lobbySpawnpoint = player.location.toVector3d()
+        } else if (locationType == LocationType.RED_BALL) {
+            arena.meta.redTeamMeta.ballSpawnPoint = player.location.toVector3d().add(0.0, 1.0, 0.0)
+        } else if (locationType == LocationType.BLUE_BALL) {
+            arena.meta.blueTeamMeta.ballSpawnPoint = player.location.toVector3d().add(0.0, 1.0, 0.0)
         }
 
         arenaRepository.save(arena)
@@ -930,7 +932,7 @@
         val selectionLeft = selectionService.getLeftClickLocation(player)
         val selectionRight = selectionService.getRightClickLocation(player)
 
-        if (selectionType == SelectionType.FIELD || selectionType == SelectionType.RED_GOAL || selectionType == SelectionType.BLUE_GOAL) {
+        if (selectionType == SelectionType.FIELD || selectionType == SelectionType.RED_AREA || selectionType == SelectionType.BLUE_AREA) {
             if (selectionLeft == null) {
                 player.sendPluginMessage(language.noLeftClickSelectionMessage)
                 return
@@ -943,15 +945,15 @@
             if (selectionType == SelectionType.FIELD) {
                 arena.corner2 = convertToOutercorner2(selectionLeft.toVector3d(), selectionRight.toVector3d())
                 arena.corner1 = convertToOutercorner1(selectionLeft.toVector3d(), selectionRight.toVector3d())
-            } else if (selectionType == SelectionType.RED_GOAL) {
-                arena.meta.redTeamMeta.goal.corner2 =
+            } else if (selectionType == SelectionType.RED_AREA) {
+                arena.meta.redTeamMeta.area.corner2 =
                     convertToOutercorner2(selectionLeft.toVector3d(), selectionRight.toVector3d())
-                arena.meta.redTeamMeta.goal.corner1 =
+                arena.meta.redTeamMeta.area.corner1 =
                     convertToOutercorner1(selectionLeft.toVector3d(), selectionRight.toVector3d())
-            } else if (selectionType == SelectionType.BLUE_GOAL) {
-                arena.meta.blueTeamMeta.goal.corner2 =
+            } else if (selectionType == SelectionType.BLUE_AREA) {
+                arena.meta.blueTeamMeta.area.corner2 =
                     convertToOutercorner2(selectionLeft.toVector3d(), selectionRight.toVector3d())
-                arena.meta.blueTeamMeta.goal.corner1 =
+                arena.meta.blueTeamMeta.area.corner1 =
                     convertToOutercorner1(selectionLeft.toVector3d(), selectionRight.toVector3d())
             }
         }
@@ -1104,30 +1106,39 @@
                         )
                     )
                 }
-                if (arena.meta.redTeamMeta.goal.corner2 != null && arena.meta.redTeamMeta.goal.corner1 != null) {
+                if (arena.meta.redTeamMeta.area.corner2 != null && arena.meta.redTeamMeta.area.corner1 != null) {
                     highLights.add(
                         AreaHighlight(
-                            roundLocation(arena.meta.redTeamMeta.goal.corner2!!),
-                            roundLocation(arena.meta.redTeamMeta.goal.corner1!!),
+                            roundLocation(arena.meta.redTeamMeta.area.corner2!!),
+                            roundLocation(arena.meta.redTeamMeta.area.corner1!!),
                             Color.RED.rgb,
                             "Red"
                         )
                     )
                 }
-                if (arena.meta.blueTeamMeta.goal.corner2 != null && arena.meta.blueTeamMeta.goal.corner1 != null) {
+                if (arena.meta.blueTeamMeta.area.corner2 != null && arena.meta.blueTeamMeta.area.corner1 != null) {
                     highLights.add(
                         AreaHighlight(
-                            roundLocation(arena.meta.blueTeamMeta.goal.corner2!!),
-                            roundLocation(arena.meta.blueTeamMeta.goal.corner1!!),
+                            roundLocation(arena.meta.blueTeamMeta.area.corner2!!),
+                            roundLocation(arena.meta.blueTeamMeta.area.corner1!!),
                             Color.BLUE.rgb,
                             "Blue"
                         )
                     )
                 }
-                if (arena.ballSpawnPoint != null) {
+
+                if (arena.meta.redTeamMeta.ballSpawnPoint != null) {
+                    highLights.add(
+                        AreaHighlight(
+                            arena.meta.redTeamMeta.ballSpawnPoint!!, null, Color.pink.rgb, "Red Ball"
+                        )
+                    )
+                }
+
+                if (arena.meta.blueTeamMeta.ballSpawnPoint != null) {
                     highLights.add(
                         AreaHighlight(
-                            arena.ballSpawnPoint!!, null, Color.pink.rgb, "Ball"
+                            arena.meta.blueTeamMeta.ballSpawnPoint!!, null, Color.pink.rgb, "Blue Ball"
                         )
                     )
                 }
Index: src/main/java/com/github/shynixn/blockball/impl/SoccerBallCrossPlatformProxy.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/SoccerBallCrossPlatformProxy.kt b/src/main/java/com/github/shynixn/blockball/impl/SoccerBallCrossPlatformProxy.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/SoccerBallCrossPlatformProxy.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/SoccerBallCrossPlatformProxy.kt	(date 1751552863065)
@@ -4,6 +4,7 @@
 import com.github.shynixn.blockball.entity.SoccerBallMeta
 import com.github.shynixn.blockball.event.BallRemoveEvent
 import com.github.shynixn.blockball.event.BallTeleportEvent
+import com.github.shynixn.mcutils.common.Vector3d
 import com.github.shynixn.mcutils.common.toLocation
 import com.github.shynixn.mcutils.common.toVector
 import com.github.shynixn.mcutils.common.toVector3d
@@ -18,7 +19,7 @@
     override val meta: SoccerBallMeta,
     private val ballDesignEntity: BallDesignEntity,
     private val ballHitBoxEntity: BallHitboxEntity,
-    private val plugin: Plugin
+    private val plugin: Plugin,
 ) : SoccerBall {
     private val playerInteractionCoolDown = HashMap<Player, Long>()
 
@@ -34,6 +35,15 @@
             ballHitBoxEntity.destroy(player)
         })
 
+    override var motion: Vector3d
+        get() {
+            return ballHitBoxEntity.motion
+        }
+        set(value) {
+            ballHitBoxEntity.motion = value
+        }
+
+
     /**
      * Is the entity dead?
      */
@@ -100,6 +110,7 @@
     override fun getVelocity(): Vector {
         return ballHitBoxEntity.motion.toVector()
     }
+
     /**
      * Shoot the ball by the given player.
      * The calculated velocity can be manipulated by the BallLeftClickEvent.
Index: src/main/java/com/github/shynixn/blockball/impl/SoccerGameImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/SoccerGameImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/SoccerGameImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/SoccerGameImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/SoccerGameImpl.kt	(date 1751553092558)
@@ -40,12 +40,20 @@
     private val playerDataRepository: PlayerDataRepository<PlayerInformation>,
     private val itemService: ItemService
 ) : SoccerGame {
+    override var bounceCounter: Int = 0
 
     /**
      * Generated game id.
      */
     override val id: String = UUID.randomUUID().toString().replace("-", "").substring(0, 8)
 
+    override var redSetScore: Int = 0
+
+    /**
+     * Blue Score.
+     */
+    override var blueSetScore: Int = 0
+
     /**
      * Is the ball spawning?
      */
@@ -61,6 +69,11 @@
      */
     var ballEnabled: Boolean = true
 
+    /**
+     * Which team is currently serving.
+     */
+    override var servingTeam = Team.BLUE
+
     /**
      * Storage.
      */
@@ -373,7 +386,7 @@
         }
 
         if (teamMeta.spawnpoint == null) {
-            player.teleport(arena.ballSpawnPoint!!.toLocation())
+            player.teleport(teamMeta.ballSpawnPoint!!.toLocation())
         } else {
             player.teleport(teamMeta.spawnpoint!!.toLocation())
         }
@@ -388,10 +401,30 @@
             if (ballSpawnCounter <= 0) {
                 destroyBall()
                 ball = soccerBallFactory.createSoccerBallForGame(
-                    arena.ballSpawnPoint!!.toLocation(), arena.ball, this
+                    getBallSpawnpointFromServingTeam(), arena.ball, this
                 )
                 ballSpawning = false
                 ballSpawnCounter = 0
+                val spawnLocation = ball!!.getLocation()
+
+
+                plugin.launch {
+                    delay(9000)
+
+                    if (ball != null) {
+                        val newLocation = ball!!.getLocation()
+
+                        if (newLocation.blockX == spawnLocation.blockX && newLocation.blockY == spawnLocation.blockY && newLocation.blockZ == spawnLocation.blockZ) {
+                            val firstPlayer = ingamePlayersStorage.keys.firstOrNull()
+
+                            if (firstPlayer != null) {
+                                ball!!.motion = Vector3d(0.0, 0.2, 0.0)
+                                lastInteractedEntity = firstPlayer
+                            }
+                        }
+                    }
+                }
+
                 return true
             }
         }
@@ -430,6 +463,8 @@
      * is handled inside of the method.
      */
     override fun notifyBallInGoal(team: Team) {
+        bounceCounter = 0
+
         if (ballSpawning) {
             return
         }
@@ -448,7 +483,14 @@
             executeGoalCommands(teamOfGoal)
             relocatePlayersAndBall()
 
-            if (blueScore >= arena.meta.lobbyMeta.maxScore) {
+            if (blueScore > 3 && blueScore - redScore >= 2) {
+                blueSetScore++
+                redScore = 0
+                blueScore = 0
+                servingTeam = getOppositeTeam(servingTeam)
+            }
+
+            if (blueSetScore >= arena.meta.lobbyMeta.maxScore) {
                 onMatchEnd(Team.BLUE)
                 onWin(Team.BLUE)
             }
@@ -462,7 +504,14 @@
             executeGoalCommands(teamOfGoal)
             relocatePlayersAndBall()
 
-            if (redScore >= arena.meta.lobbyMeta.maxScore) {
+            if (redScore > 3 && redScore - blueScore >= 2) {
+                redSetScore++
+                redScore = 0
+                blueScore = 0
+                servingTeam = getOppositeTeam(servingTeam)
+            }
+
+            if (redSetScore >= arena.meta.lobbyMeta.maxScore) {
                 onMatchEnd(Team.RED)
                 onWin(Team.RED)
             }
@@ -607,19 +656,19 @@
             var redTeamSpawnpoint = arena.meta.redTeamMeta.spawnpoint
 
             if (redTeamSpawnpoint == null) {
-                redTeamSpawnpoint = arena.ballSpawnPoint!!
+                redTeamSpawnpoint = arena.meta.redTeamMeta.ballSpawnPoint!!
             }
 
             var blueTeamSpawnpoint = arena.meta.blueTeamMeta.spawnpoint
 
             if (blueTeamSpawnpoint == null) {
-                blueTeamSpawnpoint = arena.ballSpawnPoint!!
+                blueTeamSpawnpoint = arena.meta.blueTeamMeta.ballSpawnPoint!!
             }
 
             var refereeSpawnpoint = arena.meta.refereeTeamMeta.spawnpoint
 
             if (refereeSpawnpoint == null) {
-                refereeSpawnpoint = arena.ballSpawnPoint!!
+                refereeSpawnpoint = arena.meta.blueTeamMeta.ballSpawnPoint!!
             }
 
             for (i in ingamePlayersStorage) {
@@ -772,4 +821,20 @@
             i++
         }
     }
+
+    private fun getOppositeTeam(team: Team): Team {
+        if (team == Team.RED) {
+            return Team.BLUE
+        }
+
+        return Team.RED
+    }
+
+    override fun getBallSpawnpointFromServingTeam(): Location {
+        if (servingTeam == Team.BLUE) {
+            return arena.meta.blueTeamMeta.ballSpawnPoint!!.toLocation()
+        }
+
+        return arena.meta.redTeamMeta.ballSpawnPoint!!.toLocation()
+    }
 }
Index: src/main/java/com/github/shynixn/blockball/impl/SoccerHubGameImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/SoccerHubGameImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/SoccerHubGameImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/SoccerHubGameImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/SoccerHubGameImpl.kt	(date 1751552105868)
@@ -54,7 +54,7 @@
             status = GameState.JOINABLE
         }
 
-        if (Bukkit.getWorld(arena.ballSpawnPoint!!.world!!) == null) {
+        if (Bukkit.getWorld(arena.meta.redTeamMeta.ballSpawnPoint!!.world!!) == null) {
             return
         }
 
Index: src/main/java/com/github/shynixn/blockball/impl/listener/GameListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/listener/GameListener.kt b/src/main/java/com/github/shynixn/blockball/impl/listener/GameListener.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/listener/GameListener.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/listener/GameListener.kt	(date 1751552105802)
@@ -1,8 +1,7 @@
 package com.github.shynixn.blockball.impl.listener
 
-import com.github.shynixn.blockball.contract.GameService
-import com.github.shynixn.blockball.contract.SoccerBallFactory
-import com.github.shynixn.blockball.contract.SoccerHubGame
+import com.github.shynixn.blockball.contract.*
+import com.github.shynixn.blockball.entity.ArenaMeta
 import com.github.shynixn.blockball.entity.PlayerInformation
 import com.github.shynixn.blockball.enumeration.Permission
 import com.github.shynixn.blockball.enumeration.Team
@@ -10,12 +9,19 @@
 import com.github.shynixn.blockball.event.BallTouchPlayerEvent
 import com.github.shynixn.mccoroutine.bukkit.launch
 import com.github.shynixn.mccoroutine.bukkit.ticks
+import com.github.shynixn.mcutils.common.Vector3d
 import com.github.shynixn.mcutils.common.toLocation
 import com.github.shynixn.mcutils.common.toVector3d
 import com.github.shynixn.mcutils.database.api.CachePlayerRepository
+import com.github.shynixn.mcutils.packet.api.PacketService
 import com.github.shynixn.mcutils.packet.api.event.PacketAsyncEvent
+import com.github.shynixn.mcutils.packet.api.meta.enumeration.BlockDirection
+import com.github.shynixn.mcutils.packet.api.meta.enumeration.EntityType
 import com.github.shynixn.mcutils.packet.api.meta.enumeration.InteractionType
 import com.github.shynixn.mcutils.packet.api.packet.PacketInInteractEntity
+import com.github.shynixn.mcutils.packet.api.packet.PacketOutEntityDestroy
+import com.github.shynixn.mcutils.packet.api.packet.PacketOutEntityMetadata
+import com.github.shynixn.mcutils.packet.api.packet.PacketOutEntitySpawn
 import kotlinx.coroutines.delay
 import org.bukkit.entity.Player
 import org.bukkit.event.EventHandler
@@ -31,11 +37,13 @@
 /**
  * Game Listener for the most important game events.
  */
-class GameListener (
+class GameListener(
     private val gameService: GameService,
     private val soccerBallFactory: SoccerBallFactory,
     private val plugin: Plugin,
-    private val playerDataRepository: CachePlayerRepository<PlayerInformation>
+    private val playerDataRepository: CachePlayerRepository<PlayerInformation>,
+    private val packetService: PacketService,
+    private val language: BlockBallLanguage
 ) : Listener {
     private val playerCache = HashSet<Player>()
 
@@ -208,7 +216,7 @@
         }
 
         if (teamMeta.spawnpoint == null) {
-            event.respawnLocation = game.arena.ballSpawnPoint!!.toLocation()
+            event.respawnLocation = teamMeta.ballSpawnPoint!!.toLocation()
         } else {
             event.respawnLocation = teamMeta.spawnpoint!!.toLocation()
         }
@@ -288,45 +296,141 @@
     fun onBallRayTraceEvent(event: BallRayTraceEvent) {
         for (game in gameService.getAll()) {
             if (game.ball == event.ball && event.ball.isInteractable) {
-                val targetPosition = event.targetLocation.toVector3d()
-                val sourcePosition = event.ball.getLocation().toVector3d()
-
-                if (game.arena.meta.redTeamMeta.goal.isLocationInSelection(sourcePosition)) {
-                    game.notifyBallInGoal(Team.RED)
-                    return
-                }
+                if (event.hitBlock && event.blockDirection == BlockDirection.UP) {
+                    onBallBounceGroundEvent(game, event.ball)
+                }
+                return
+            }
+        }
+    }
+
+    private fun onBallBounceGroundEvent(game: SoccerGame, ball: SoccerBall) {
+        game.bounceCounter++
 
-                if (game.arena.meta.blueTeamMeta.goal.isLocationInSelection(sourcePosition)) {
-                    game.notifyBallInGoal(Team.BLUE)
-                    return
-                }
+        val hitTeamArea = getHitTeamArea(ball.getLocation().toVector3d(), game.arena.meta)
+        val player = game.lastInteractedEntity
+
+        if (player == null) {
+            return
+        }
 
-                if (game.arena.meta.redTeamMeta.goal.isLocationInSelection(targetPosition)) {
-                    return
-                }
+        if (!player.isOnline) {
+            // Just assign it one randomly.
+            game.lastInteractedEntity = game.getPlayers().firstOrNull { e -> e.isOnline }
+
+            if (game.lastInteractedEntity == null) {
+                return
+            }
+        }
 
-                if (game.arena.meta.blueTeamMeta.goal.isLocationInSelection(targetPosition)) {
-                    return
-                }
+        val playerStorage = game.ingamePlayersStorage[player] ?: return
+        val team = playerStorage.team ?: return
+
+        if (team == Team.REFEREE) {
+            return
+        }
 
-                if (!game.arena.isLocationIn2dSelection(targetPosition)) {
-                    event.hitBlock = true
-                    event.blockDirection = game.arena.getRelativeBlockDirectionToLocation(targetPosition)
-                    game.ballBumperCounter++
+        val opponentTeam = getOppositeTeam(team)
 
-                    if (game.ballBumperCounter > 60) {
-                        // Rescue system, if the ball gets stuck in the walls.
-                        event.ball.teleport(game.arena.ballSpawnPoint!!.toLocation())
-                        game.ballBumperCounter = 0
-                    }
+        if (hitTeamArea == null) {
+            printMessageAtScorePosition(
+                game,
+                ball,
+                language.bounceOutHologram.text
+            )
 
-                    return
-                } else {
-                    game.ballBumperCounter = 0
-                }
+            if (game.bounceCounter == 1) {
+                // Player shot the ball directly outside the field. (He shot it in his goal)
+                game.notifyBallInGoal(team)
+                return
+            }
+
+            // Enemy Player was not able to get the ball.  (The enemy goal was shot)
+            game.notifyBallInGoal(opponentTeam)
+            return
+        }
+
+        if (hitTeamArea == team) {
+            // Shot in own field, now allowed.
+            printMessageAtScorePosition(
+                game,
+                ball,
+                language.bounceSecondHologram.text
+            )
+            game.notifyBallInGoal(team)  // (He shot it in his goal)
+            return
+        }
 
-                return
-            }
-        }
+        if (game.bounceCounter == 1) {
+            // Fine continue game.
+            return
+        }
+
+        printMessageAtScorePosition(
+            game,
+            ball,
+            language.bounceSecondHologram.text
+        )
+        game.notifyBallInGoal(opponentTeam)
+    }
+
+    /**
+     * Print at score position.
+     */
+    private fun printMessageAtScorePosition(game: SoccerGame, ball: SoccerBall, message: String) {
+        val location = ball.getLocation().toVector3d().addRelativeUp(-1.5).toLocation()
+        val entityId = packetService.getNextEntityId()
+        val players = game.getPlayers()
+
+        for (player in players) {
+            packetService.sendPacketOutEntitySpawn(player, PacketOutEntitySpawn().also {
+                it.entityId = entityId
+                it.entityType = EntityType.ARMOR_STAND
+                it.target = location
+            })
+
+            packetService.sendPacketOutEntityMetadata(player, PacketOutEntityMetadata().also {
+                it.entityId = entityId
+                it.customNameVisible = true
+                it.customname = message
+                it.isInvisible = true
+            })
+        }
+
+        plugin.launch {
+            delay(2000)
+            for (player in players) {
+                packetService.sendPacketOutEntityDestroy(player, PacketOutEntityDestroy().also {
+                    it.entityIds = listOf(entityId)
+                })
+            }
+        }
+    }
+
+    /**
+     * Gets the opponent team.
+     */
+    private fun getOppositeTeam(team: Team): Team {
+        if (team == Team.RED) {
+            return Team.BLUE
+        }
+
+        return Team.RED
+    }
+
+    /**
+     * Gets the team where the ball as hit the field.
+     * e.g. ball has hit the ground on field of team blue -> returns team blue.
+     */
+    private fun getHitTeamArea(vector3d: Vector3d, arena: ArenaMeta): Team? {
+        if (arena.redTeamMeta.area.isLocationIn2dSelection(vector3d)) {
+            return Team.RED
+        }
+
+        if (arena.blueTeamMeta.area.isLocationIn2dSelection(vector3d)) {
+            return Team.BLUE
+        }
+
+        return null
     }
 }
Index: src/main/java/com/github/shynixn/blockball/impl/SoccerMiniGameImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/SoccerMiniGameImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/SoccerMiniGameImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/SoccerMiniGameImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/SoccerMiniGameImpl.kt	(date 1751552105879)
@@ -99,11 +99,11 @@
             status = GameState.JOINABLE
         }
 
-        if (Bukkit.getWorld(arena.ballSpawnPoint!!.world!!) == null) {
+        if (Bukkit.getWorld(arena.meta.redTeamMeta.ballSpawnPoint!!.world!!) == null) {
             return
         }
 
-        if (arena.meta.hubLobbyMeta.resetArenaOnEmpty && ingamePlayersStorage.isEmpty() && (redScore > 0 || blueScore > 0)) {
+        if (arena.meta.hubLobbyMeta.resetArenaOnEmpty && ingamePlayersStorage.isEmpty() && (redScore > 0 || blueScore > 0 || redSetScore > 0 || blueSetScore > 0)) {
             setGameClosing()
         }
 
@@ -303,12 +303,12 @@
      */
     private fun timeAlmostUp() {
         when {
-            redScore == blueScore -> {
+            redSetScore == blueSetScore -> {
                 onMatchEnd(null)
                 onDraw()
             }
 
-            redScore > blueScore -> {
+            redSetScore > blueSetScore -> {
                 onMatchEnd(Team.RED)
                 onWin(Team.RED)
             }
Index: src/main/java/com/github/shynixn/blockball/impl/SoccerRefereeGameImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/SoccerRefereeGameImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/SoccerRefereeGameImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/SoccerRefereeGameImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/SoccerRefereeGameImpl.kt	(date 1751552105890)
@@ -96,7 +96,7 @@
             status = GameState.JOINABLE
         }
 
-        if (Bukkit.getWorld(arena.ballSpawnPoint!!.world!!) == null) {
+        if (Bukkit.getWorld(arena.meta.redTeamMeta.ballSpawnPoint!!.world!!) == null) {
             return
         }
 
Index: docs/wiki/docs/placeholders.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/wiki/docs/placeholders.md b/docs/wiki/docs/placeholders.md
--- a/docs/wiki/docs/placeholders.md	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/docs/wiki/docs/placeholders.md	(date 1751552105616)
@@ -15,12 +15,15 @@
 | %blockball_game_displayName%        | DisplayName of the game                                                                                       |
 | %blockball_game_maxPlayers%         | Max amount of players who can join this game                                                                  |
 | %blockball_game_players%            | Current amount of players in this game                                                                        |
+| %blockball_game_tennisScore%        | A tennis formated score text of the game                                                                      |
 | %blockball_game_redDisplayName%     | Name of team red                                                                                              |
 | %blockball_game_redScore%           | Score of the red team                                                                                         |
+| %blockball_game_redSetScore%        | Set score of the red team                                                                                     |
 | %blockball_game_redPlayers%         | Amount of players who are currently in the red team                                                           |
 | %blockball_game_redMaxPlayers%      | Max amount of players who can join the red team                                                               |
 | %blockball_game_blueDisplayName%    | Name of team blue                                                                                             |
 | %blockball_game_blueScore%          | Score of the blue team                                                                                        |
+| %blockball_game_blueSetScore%       | Set score of the blue team                                                                                    | 
 | %blockball_game_bluePlayers%        | Amount of players who are currently in the blue team                                                          |
 | %blockball_game_blueMaxPlayers%     | Max amount of players who can join the blue team                                                              |
 | %blockball_game_time%               | Remaining time until the match ends                                                                           |
@@ -68,7 +71,7 @@
 | %blockball_player_totalGoalsPerGameFull% | Ratio between amount of games a player has fully played and scored total goals    |
 
 !!! note "LeaderBoard"
-    Replace **top_1** with **top_2** or **top_3** etc. to build a leaderboard.
+Replace **top_1** with **top_2** or **top_3** etc. to build a leaderboard.
 
 | LeaderBoard Placeholders (Patreon Only)                 | Description                                                                                  |
 |---------------------------------------------------------|----------------------------------------------------------------------------------------------|
Index: src/main/java/com/github/shynixn/blockball/enumeration/PlaceHolder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/enumeration/PlaceHolder.kt b/src/main/java/com/github/shynixn/blockball/enumeration/PlaceHolder.kt
--- a/src/main/java/com/github/shynixn/blockball/enumeration/PlaceHolder.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/enumeration/PlaceHolder.kt	(date 1751552105745)
@@ -7,7 +7,6 @@
 import com.github.shynixn.blockball.contract.StatsService
 import com.github.shynixn.blockball.entity.LeaderBoardStats
 import com.github.shynixn.blockball.entity.PlayerInformation
-import com.github.shynixn.blockball.entity.StatsGame
 import com.github.shynixn.mcutils.common.placeholder.PlaceHolderService
 import com.github.shynixn.mcutils.database.api.CachePlayerRepository
 import org.bukkit.entity.Player
@@ -34,7 +33,9 @@
 
     GAME_RED_PLAYER_AMOUNT("%blockball_game_redPlayers_[game]%", { _, game, _ -> game?.redTeam?.size?.toString() }),
 
-    GAME_RED_PLAYER_NAMES("%blockball_game_redPlayerNames_[game]%", {_, game, _ -> game?.redTeam?.joinToString(", ") { e -> e.name } }),
+    GAME_RED_PLAYER_NAMES(
+        "%blockball_game_redPlayerNames_[game]%",
+        { _, game, _ -> game?.redTeam?.joinToString(", ") { e -> e.name } }),
 
     GAME_RED_PLAYER_MAXAMOUNT(
         "%blockball_game_redMaxPlayers_[game]%",
@@ -48,7 +49,9 @@
 
     GAME_BLUE_PLAYER_AMOUNT("%blockball_game_bluePlayers_[game]%", { _, game, _ -> game?.blueTeam?.size?.toString() }),
 
-    GAME_BLUE_PLAYER_NAMES("%blockball_game_bluePlayerNames_[game]%", {_, game, _ -> game?.blueTeam?.joinToString(", ") { e -> e.name } }),
+    GAME_BLUE_PLAYER_NAMES(
+        "%blockball_game_bluePlayerNames_[game]%",
+        { _, game, _ -> game?.blueTeam?.joinToString(", ") { e -> e.name } }),
 
     GAME_BLUE_PLAYER_MAXAMOUNT(
         "%blockball_game_blueMaxPlayers_[game]%",
@@ -136,6 +139,50 @@
             null
         }
     }),
+
+    GAME_TENNIS_SCORE("%blockball_game_tennisScore_[game]%", { _, game, _ ->
+        if (game != null) {
+            val teamRedScore = game.redScore
+            val teamBlueScore = game.blueScore
+            val servingTeam = game.servingTeam
+
+            if (teamRedScore == 3 && teamBlueScore == 3) {
+                "Deuce"
+            } else if (teamRedScore >= 3 && teamBlueScore >= 3) {
+                if (servingTeam == Team.RED && teamRedScore > teamBlueScore) {
+                    "Ad-In"
+                } else if (servingTeam == Team.BLUE && teamBlueScore > teamRedScore) {
+                    "Ad-In"
+                } else {
+                    "Ad-Out"
+                }
+            } else if (teamRedScore > 3 || teamBlueScore > 3) {
+                "Game"
+            } else {
+                val redScore = BlockBallPlugin.getScore(teamRedScore)
+                val blueScore = BlockBallPlugin.getScore(teamBlueScore)
+                "$redScore - $blueScore"
+            }
+        } else {
+            null
+        }
+    }),
+
+    GAME_TENNIS_BLUE_SET_SCORE("%blockball_game_blueSetScore_[game]%", { _, game, _ ->
+        if (game != null) {
+            game.blueSetScore.toString()
+        } else {
+            null
+        }
+    }),
+
+    GAME_TENNIS_RED_SET_SCORE("%blockball_game_redSetScore_[game]%", { _, game, _ ->
+        if (game != null) {
+            game.redSetScore.toString()
+        } else {
+            null
+        }
+    }),
 
     // Player PlaceHolders
 
@@ -215,10 +262,10 @@
     PLAYER_STATS_TOPGOALSCURRENT("%blockball_game_topGoalsCurrentPlayerName_[game]%", { _, game, _ ->
         if (!com.github.shynixn.blockball.BlockBallDependencyInjectionModule.areLegacyVersionsIncluded) {
             BlockBallPlugin.patreonOnly
-        } else if(game != null) {
+        } else if (game != null) {
             val storage = game.ingamePlayersStorage.maxBy { e -> e.value.scoredGoals }
             storage.key.name
-        }else{
+        } else {
             ""
         }
     }),
Index: docs/wiki/docs/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/wiki/docs/README.md b/docs/wiki/docs/README.md
--- a/docs/wiki/docs/README.md	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/docs/wiki/docs/README.md	(date 1751552105624)
@@ -2,8 +2,6 @@
 
 BlockBall is a spigot plugin to play soccer/football games in Minecraft.
 
-Are you looking for the 6.x.x wiki? You can access it via [the WayBackMachine](https://web.archive.org/web/20240811125048/https://shynixn.github.io/BlockBall/build/html/index.html).
-
 ## Features
 
 * Adds a new playable soccer/football lobby game or standalone minigame
@@ -12,7 +10,3 @@
 * PlaceHolderApi Support
 * Multiple games per server
 * Player Stats collecting (Patreon Only)
-
-## Installation
-
-<iframe width="560" height="315" src="https://www.youtube.com/embed/VPBYYQUaRCs?si=oJf9aM7RWhpXWJ_y" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
Index: src/main/java/com/github/shynixn/blockball/enumeration/SelectionType.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/enumeration/SelectionType.kt b/src/main/java/com/github/shynixn/blockball/enumeration/SelectionType.kt
--- a/src/main/java/com/github/shynixn/blockball/enumeration/SelectionType.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/enumeration/SelectionType.kt	(date 1751552105753)
@@ -2,6 +2,6 @@
 
 enum class SelectionType {
     FIELD,
-    RED_GOAL,
-    BLUE_GOAL,
+    RED_AREA,
+    BLUE_AREA
 }
Index: src/main/java/com/github/shynixn/blockball/impl/BallHitboxEntity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/BallHitboxEntity.kt b/src/main/java/com/github/shynixn/blockball/impl/BallHitboxEntity.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/BallHitboxEntity.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/BallHitboxEntity.kt	(date 1751552105840)
@@ -58,7 +58,7 @@
      * Motion of the ball.
      * Apply gravity at spawn to start with physic calculations.
      */
-    var motion: Vector3d = Vector3d(0.0, -0.7, 0.0)
+    var motion: Vector3d = Vector3d(0.0, 0.0, 0.0)
 
     /**
      * Request a teleport at next tick.
@@ -170,13 +170,22 @@
 
         val prevEyeLoc = player.eyeLocation.clone()
         this.skipCounter = meta.hitbox.interactionCoolDownTicks
+        game?.bounceCounter = 0
+
+        val finalMultiplier = if (player.inventory.heldItemSlot < 3) {
+            baseMultiplier * 0.8
+        } else if (player.inventory.heldItemSlot < 6) {
+            baseMultiplier
+        } else {
+            baseMultiplier * 1.2
+        }
 
         if (meta.hitbox.leftClickRightClickDelayTicks == 0) {
-            executeKickPass(player, prevEyeLoc, baseMultiplier, isPass)
+            executeKickPass(player, prevEyeLoc, finalMultiplier, isPass)
         } else {
             plugin.launch {
                 delay(meta.hitbox.leftClickRightClickDelayTicks.ticks)
-                executeKickPass(player, prevEyeLoc, baseMultiplier, isPass)
+                executeKickPass(player, prevEyeLoc, finalMultiplier, isPass)
             }
         }
     }
@@ -236,7 +245,12 @@
             if (rayTraceEvent.blockDirection == BlockDirection.UP) {
                 this.stuckCounter = 0
                 this.cachedLength = this.motion.length()
-                calculateBallOnGround(players, targetPosition)
+                this.motion.y *= -1 * meta.groundBounce
+                val rollingResistance = 1.0 - this.meta.rollingResistance
+                this.motion = this.motion.multiply(rollingResistance)
+                this.isOnGround = true
+                // Correct the yaw of the ball after bouncing.
+                this.position.yaw = getYawFromVector(origin, this.motion.copy().normalize())
                 return
             } else {
                 stuckCounter++
Index: src/main/java/com/github/shynixn/blockball/impl/service/GameServiceImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/service/GameServiceImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/service/GameServiceImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/service/GameServiceImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/service/GameServiceImpl.kt	(date 1751552105816)
@@ -228,21 +228,25 @@
                 language.gameTypeRefereeOnlyForPatreons.text
             )
         }
-        if (arena.ballSpawnPoint == null) {
+        if (arena.meta.redTeamMeta.ballSpawnPoint == null) {
+            arena.enabled = false
+            throw SoccerGameException(arena, "Set the red ball spawnpoint for arena ${arena.name}!")
+        }
+        if (arena.meta.blueTeamMeta.ballSpawnPoint == null) {
             arena.enabled = false
-            throw SoccerGameException(arena, "Set the ball spawnpoint for arena ${arena.name}!")
+            throw SoccerGameException(arena, "Set the blue ball spawnpoint for arena ${arena.name}!")
         }
         if (arena.corner2 == null || arena.corner1 == null) {
             arena.enabled = false
             throw SoccerGameException(arena, "Set the playing field for arena ${arena.name}!")
         }
-        if (arena.meta.redTeamMeta.goal.corner2 == null || arena.meta.redTeamMeta.goal.corner1 == null) {
+        if (arena.meta.redTeamMeta.area.corner2 == null || arena.meta.redTeamMeta.area.corner1 == null) {
             arena.enabled = false
-            throw SoccerGameException(arena, "Set the red goal for arena ${arena.name}!")
+            throw SoccerGameException(arena, "Set the red area for arena ${arena.name}!")
         }
-        if (arena.meta.blueTeamMeta.goal.corner2 == null || arena.meta.blueTeamMeta.goal.corner1 == null) {
+        if (arena.meta.blueTeamMeta.area.corner2 == null || arena.meta.blueTeamMeta.area.corner1 == null) {
             arena.enabled = false
-            throw SoccerGameException(arena, "Set the blue goal for arena ${arena.name}!")
+            throw SoccerGameException(arena, "Set the blue area for arena ${arena.name}!")
         }
 
         if (arena.gameType == GameType.MINIGAME || arena.gameType == GameType.REFEREEGAME) {
@@ -281,36 +285,14 @@
             arena.corner1!!.y = 10.0
         }
 
-        fixCorners(arena.meta.redTeamMeta.goal.corner2!!, arena.meta.redTeamMeta.goal.corner1!!)
-        fixCorners(arena.meta.blueTeamMeta.goal.corner2!!, arena.meta.blueTeamMeta.goal.corner1!!)
+        fixCorners(arena.meta.redTeamMeta.area.corner2!!, arena.meta.redTeamMeta.area.corner1!!)
+        fixCorners(arena.meta.blueTeamMeta.area.corner2!!, arena.meta.blueTeamMeta.area.corner1!!)
 
         validateGoalSize(arena, Team.BLUE, arena.meta.blueTeamMeta)
         validateGoalSize(arena, Team.RED, arena.meta.redTeamMeta)
     }
 
     private fun validateGoalSize(arena: SoccerArena, team: Team, teamMeta: TeamMeta) {
-        if (arena.meta.customizingMeta.ignoreGoalSize) {
-            return
-        }
-
-        if (abs(teamMeta.goal.corner1!!.x - teamMeta.goal.corner2!!.x) < 1.8) {
-            throw SoccerGameException(
-                arena,
-                "The goal for team ${team.name} should be at least 2x2x2 for ${arena.name}!"
-            )
-        }
-        if (abs(teamMeta.goal.corner1!!.y - teamMeta.goal.corner2!!.y) < 1.8) {
-            throw SoccerGameException(
-                arena,
-                "The goal for team ${team.name} should be at least 2x2x2 for ${arena.name}!"
-            )
-        }
-        if (abs(teamMeta.goal.corner1!!.z - teamMeta.goal.corner2!!.z) < 1.8) {
-            throw SoccerGameException(
-                arena,
-                "The goal for team ${team.name} should be at least 2x2x2 for ${arena.name}!"
-            )
-        }
     }
 
     /**
Index: src/main/java/com/github/shynixn/blockball/impl/service/HubGameForcefieldServiceImpl.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/impl/service/HubGameForcefieldServiceImpl.kt b/src/main/java/com/github/shynixn/blockball/impl/service/HubGameForcefieldServiceImpl.kt
--- a/src/main/java/com/github/shynixn/blockball/impl/service/HubGameForcefieldServiceImpl.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/impl/service/HubGameForcefieldServiceImpl.kt	(date 1751552105828)
@@ -7,6 +7,7 @@
 import com.github.shynixn.blockball.entity.InteractionCache
 import com.github.shynixn.blockball.enumeration.GameState
 import com.github.shynixn.blockball.enumeration.GameType
+import com.github.shynixn.blockball.enumeration.Team
 import com.github.shynixn.mcutils.common.chat.ChatMessageService
 import com.github.shynixn.mcutils.common.chat.ClickEvent
 import com.github.shynixn.mcutils.common.chat.ClickEventType
@@ -19,7 +20,6 @@
 import org.bukkit.GameMode
 import org.bukkit.Location
 import org.bukkit.entity.Player
-import java.util.*
 
 class HubGameForcefieldServiceImpl(
     private val gameService: GameService,
@@ -38,6 +38,27 @@
         val gameInternal = gameService.getByPlayer(player)
 
         if (gameInternal != null) {
+            val storage = gameInternal.ingamePlayersStorage[player] ?: return
+
+            if (storage.team == Team.REFEREE) {
+                return
+            }
+
+            val (teamMeta, oppositeTeamMeta) = if (storage.team == Team.BLUE) {
+                Pair(gameInternal.arena.meta.blueTeamMeta, gameInternal.arena.meta.redTeamMeta)
+            } else {
+                Pair(gameInternal.arena.meta.redTeamMeta, gameInternal.arena.meta.blueTeamMeta)
+            }
+
+            if (oppositeTeamMeta.area.isLocationIn2dSelection(location.toVector3d())){
+                val knockBack =
+                    teamMeta.area.center!!.toLocation().toVector().subtract(player.location.toVector())
+                        .normalize().multiply(2.0)
+                player.location.direction = knockBack
+                player.velocity = knockBack
+                player.allowFlight = true
+            }
+
             if (gameInternal.arena.gameType == GameType.HUBGAME) {
                 if (!gameInternal.arena.isLocationIn2dSelection(location.toVector3d())) {
                     gameInternal.leave(player)
@@ -45,8 +66,14 @@
                 }
             } else if ((gameInternal.arena.gameType == GameType.MINIGAME || gameInternal.arena.gameType == GameType.REFEREEGAME) && gameInternal.arena.meta.minigameMeta.forceFieldEnabled) {
                 if (gameInternal.status == GameState.RUNNING && !gameInternal.arena.isLocationIn2dSelection(location.toVector3d())) {
+                    val storage = gameInternal.ingamePlayersStorage[player] ?: return
+                    val teamMeta = if (storage.team == Team.BLUE) {
+                        gameInternal.arena.meta.blueTeamMeta
+                    } else {
+                        gameInternal.arena.meta.redTeamMeta
+                    }
                     val knockBack =
-                        gameInternal.arena.ballSpawnPoint!!.toLocation().toVector().subtract(player.location.toVector())
+                        teamMeta.ballSpawnPoint!!.toLocation().toVector().subtract(player.location.toVector())
                             .normalize().multiply(2.0)
                     player.location.direction = knockBack
                     player.velocity = knockBack
@@ -106,7 +133,7 @@
                                         ) + "\n"
                                         it.clickEvent = ClickEvent(
                                             ClickEventType.RUN_COMMAND,
-                                            "/blockball join ${game.arena.name} red"
+                                            "/mctennis join ${game.arena.name} red"
                                         )
                                     },
                                     TextComponent().also {
@@ -117,7 +144,7 @@
                                         )
                                         it.clickEvent = ClickEvent(
                                             ClickEventType.RUN_COMMAND,
-                                            "/blockball join ${game.arena.name} blue"
+                                            "/mctennis join ${game.arena.name} blue"
                                         )
                                     }
                                 )
Index: docs/wiki/docs/game.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/docs/wiki/docs/game.md b/docs/wiki/docs/game.md
--- a/docs/wiki/docs/game.md	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/docs/wiki/docs/game.md	(date 1751552105602)
@@ -56,7 +56,7 @@
 /blockball select game1 field
 ```
 
-### Setting the goal of team red
+### Setting the area of team red
 
 Select ``Point A`` with left-clicking using the BlockBall axe and ``Point B`` with right-clicking using the BlockBall axe.
 Then execute the command below.
@@ -65,28 +65,37 @@
 
 
 ```
-/blockball select game1 red_goal
+/blockball select game1 red_area
 ```
 
-### Setting the goal of team blue
+### Setting the area of team blue
 
 Select ``Point A`` with left-clicking using the BlockBall axe and ``Point B`` with right-clicking using the BlockBall axe.
 Then execute the command below.
 
-![image info](./assets/arena8.png)
+![image info](./assets/blue_area.png)
 
 
 ```
-/blockball select game1 blue_goal
+/blockball select game1 blue_area
 ```
 
-### Setting the ball spawnpoint
+### Setting the ball spawnpoint for team red
+
+Move to the location where you want the ball to spawn. The current location of your player is used as a value when you execute the ``/blockball location``
+sub command. Execute the command below.
+
+```
+/blockball location game1 red_ball
+```
+
+### Setting the ball spawnpoint for team blue
 
 Move to the location where you want the ball to spawn. The current location of your player is used as a value when you execute the ``/blockball location``
 sub command. Execute the command below.
 
 ```
-/blockball location game1 ball
+/blockball location game1 blue_ball
 ```
 
 ### Enable the game
Index: src/main/java/com/github/shynixn/blockball/enumeration/LocationType.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/enumeration/LocationType.kt b/src/main/java/com/github/shynixn/blockball/enumeration/LocationType.kt
--- a/src/main/java/com/github/shynixn/blockball/enumeration/LocationType.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/enumeration/LocationType.kt	(date 1751552105723)
@@ -5,7 +5,8 @@
     RED_SPAWNPOINT,
     BLUE_SPAWNPOINT,
     REFEREE_SPAWNPOINT,
-    BALL,
+    RED_BALL,
+    BLUE_BALL,
     RED_LOBBY,
     BLUE_LOBBY,
     REFEREE_LOBBY,
Index: src/main/java/com/github/shynixn/blockball/contract/SoccerBall.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/contract/SoccerBall.kt b/src/main/java/com/github/shynixn/blockball/contract/SoccerBall.kt
--- a/src/main/java/com/github/shynixn/blockball/contract/SoccerBall.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/contract/SoccerBall.kt	(date 1751552834721)
@@ -1,6 +1,7 @@
 package com.github.shynixn.blockball.contract
 
 import com.github.shynixn.blockball.entity.SoccerBallMeta
+import com.github.shynixn.mcutils.common.Vector3d
 import org.bukkit.Location
 import org.bukkit.entity.Player
 import org.bukkit.util.Vector
@@ -39,6 +40,11 @@
      */
     var isInteractable: Boolean
 
+    /**
+     * Motion.
+     */
+    var motion : Vector3d
+
     /**
      * Teleports the ball to the given [location].
      */
Index: src/main/resources/config.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/config.yml b/src/main/resources/config.yml
--- a/src/main/resources/config.yml	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/resources/config.yml	(date 1751552105962)
@@ -12,18 +12,15 @@
 # Command settings
 ############################
 commands:
-  blockball:
+  mctennis:
     aliases:
       - "soccer"
-      - "football"
   blockballscoreboard:
     aliases:
       - "soccerscoreboard"
-      - "footballscoreboard"
   blockballbossbar:
     aliases:
       - "soccerbossbar"
-      - "footballbossbar"
 
 ############################
 # Debug settings
Index: src/main/java/com/github/shynixn/blockball/contract/SoccerGame.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/contract/SoccerGame.kt b/src/main/java/com/github/shynixn/blockball/contract/SoccerGame.kt
--- a/src/main/java/com/github/shynixn/blockball/contract/SoccerGame.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/contract/SoccerGame.kt	(date 1751552105637)
@@ -145,4 +145,17 @@
      * Respawns the ball and sets it to the given location.
      */
     fun setBallToLocation(location: Location)
+
+    var bounceCounter : Int
+
+    var servingTeam : Team
+
+    var redSetScore: Int
+
+    /**
+     * Blue Score.
+     */
+    var blueSetScore: Int
+
+    fun getBallSpawnpointFromServingTeam() : Location
 }
Index: src/main/resources/plugin.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
--- a/src/main/resources/plugin.yml	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/resources/plugin.yml	(date 1751552158718)
@@ -1,4 +1,4 @@
-name: BlockBall
+name: MCTennis
 version: 7.23.0
 author: Shynixn
 website: https://www.spigotmc.org/members/shynixn.63455/
Index: src/main/java/com/github/shynixn/blockball/entity/SoccerArena.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/SoccerArena.kt b/src/main/java/com/github/shynixn/blockball/entity/SoccerArena.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/SoccerArena.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/SoccerArena.kt	(date 1751552105686)
@@ -31,9 +31,6 @@
     @Comment("Corner 2 of the playable field.")
     override var corner2: Vector3d? = null
 
-    @Comment("Spawn location of the ball.")
-    var ballSpawnPoint : Vector3d? = null
-
     @Comment("All settings related to the ball.")
     var ball : SoccerBallMeta = SoccerBallMeta()
 
Index: src/main/java/com/github/shynixn/blockball/entity/SoccerBallMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/SoccerBallMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/SoccerBallMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/SoccerBallMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/SoccerBallMeta.kt	(date 1751552105704)
@@ -13,13 +13,13 @@
     var hitbox: SoccerBallHitBoxMeta = SoccerBallHitBoxMeta()
 
     @Comment("The gravity modifier how fast a ball falls to the ground after being kicked.")
-    var gravityModifier: Double = 0.07
+    var gravityModifier: Double = 0.015
 
     @Comment("The speed reducement of the ball in the air.")
-    var airResistance: Double = 0.001
+    var airResistance: Double = 0.0001
 
     @Comment("The speed reducement of the ball on the ground.")
-    var rollingResistance: Double = 0.1
+    var rollingResistance: Double = 0.0001
 
     @Comment("The horizontal speed gain after touching the ball.")
     var horizontalTouchModifier: Double = 1.0
@@ -28,10 +28,13 @@
     var verticalTouchModifier: Double = 1.0
 
     @Comment("The horizontal and vertical speed gain after left clicking the ball.")
-    var shotVelocity: Double = 1.5
+    var shotVelocity: Double = 0.6
 
     @Comment("Allows to override the shotVelocity with a vertical modifier if it is any other value than 1.0.")
-    var shotPassYVelocityOverwrite: Double = 1.0
+    var shotPassYVelocityOverwrite: Double = 1.3
+
+    @Comment("Allows to set how bouncy the ball is. e.g. setting 0.9 lets the ball keep 90% of its original motion.")
+    var groundBounce : Double = 0.6
 
     @Comment("The horizontal and vertical speed gain after right clicking the ball.")
     var passVelocity: Double = 1.2
@@ -59,13 +62,13 @@
         var leftClickEnabled: Boolean = true
 
         @Comment("Is rightClicking the ball enabled?")
-        var rightClickEnabled: Boolean = true
+        var rightClickEnabled: Boolean = false
 
         @Comment("Size of the running-into hitbox.")
         var touchHitBoxSize: Double = 1.0
 
         @Comment("Is running-into the ball enabled?")
-        var touchEnabled: Boolean = true
+        var touchEnabled: Boolean = false
 
         @Comment("Allows to move the hitbox up and down on the y-axe to make the ball appear more in the air or closer to the ground.")
         var offSetY: Double = -0.3
@@ -85,21 +88,21 @@
 
     class SoccerBallRenderMeta {
         @Comment("Size of the rendered ball. These days you can set an arbitrary size. In older Minecraft versions, this version only supported 1.0 (STANDARD) and 0.5 (SMALL). ")
-        var scale: Double = 1.0
+        var scale: Double = 0.5
 
         @Comment("The item rendering the ball.")
         var item: Item = Item().also {
             it.typeName = "PLAYER_HEAD,397"
             it.durability = "3"
             it.skinBase64 =
-                "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHBzOi8vdGV4dHVyZXMubWluZWNyYWZ0Lm5ldC90ZXh0dXJlLzhlNGE3MGI3YmJjZDdhOGMzMjJkNTIyNTIwNDkxYTI3ZWE2YjgzZDYwZWNmOTYxZDJiNGVmYmJmOWY2MDVkIn19fQ=="
+                "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZjZkYThhNzk3N2VjOTIxNGM1YjcwMWY5YWU3ZTE1NWI4ZWIyMWQxZDM3MTU5OGUxYjk4NzVjNGM4NWM2NWFlNiJ9fX0="
         }
 
         @Comment("Should the ball rotate?")
         var rotating: Boolean = true
 
         @Comment("Allows to move the ball up and down on the y-axe to make the ball appear more in the air or closer to the ground.")
-        var offSetY: Double = -1.0
+        var offSetY: Double = -0.2
     }
 
     init {
Index: src/main/java/com/github/shynixn/blockball/entity/TeamMeta.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/entity/TeamMeta.kt b/src/main/java/com/github/shynixn/blockball/entity/TeamMeta.kt
--- a/src/main/java/com/github/shynixn/blockball/entity/TeamMeta.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/entity/TeamMeta.kt	(date 1751552105713)
@@ -28,9 +28,11 @@
     @Comment("Minimum amount of players in this team to keep the game running.")
     var minPlayingPlayers: Int = 0
 
-    /** Goal properties of the team. */
-    @Comment("Goal location properties.")
-    val goal: Selection = Selection()
+    @Comment("Spawn location of the ball for this team.")
+    var ballSpawnPoint : Vector3d? = null
+
+    @Comment("Area properties.")
+    val area: Selection = Selection()
 
     @Comment("The armor a player receives when joining this team. Use the /blockball armor command ingame to configure this.")
     var armor: Array<String?> = arrayOfNulls(4)
Index: src/main/java/com/github/shynixn/blockball/contract/BlockBallLanguage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/github/shynixn/blockball/contract/BlockBallLanguage.kt b/src/main/java/com/github/shynixn/blockball/contract/BlockBallLanguage.kt
--- a/src/main/java/com/github/shynixn/blockball/contract/BlockBallLanguage.kt	(revision f5782dfc685d5a67ba91007f5d7ed7d850ff15d5)
+++ b/src/main/java/com/github/shynixn/blockball/contract/BlockBallLanguage.kt	(date 1751552415286)
@@ -197,4 +197,8 @@
   var reloadMessage: LanguageItem
 
   var commonErrorMessage: LanguageItem
+
+  var bounceOutHologram: LanguageItem
+
+  var bounceSecondHologram: LanguageItem
 }
